cache:
  paths:
     - .gradle/wrapper
     - .gradle/caches

services:
  - docker:19.03.7-dind
stages:
  - build jar
  - build and push docker image
  - deploy

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - source .${CI_COMMIT_REF_NAME}.env

build:
  image: openjdk:11
  stage: build jar
  script:
    - chmod +x ./gradlew
    - ./gradlew build
  artifacts:
    paths:
      - build/libs/*.jar

docker build:
  image: docker:stable
  stage: build and push docker image
  script:
    - docker build -t $DOCKER_REPO .
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io
    - docker push $DOCKER_REPO

deploy:
  image: ubuntu:latest
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - ssh $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io; 
      docker stop $APP_NAME; 
      docker system prune -a -f; 
      docker pull $DOCKER_REPO; 
      docker container run -d --name $APP_NAME -p $PORT:8080; 
      docker logout"
